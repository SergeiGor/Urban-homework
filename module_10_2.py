from threading import Thread
from time import sleep



class Knight(Thread):
    def __init__(self, name, power):
        super().__init__()
        self.name = name
        self.power = power

    def run(self):
        print(f"<{name}, на нас напали!")
        for i in rage(100-power):
            print('идет бой')







# Создание класса
first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight("Sir Galahad", 20)
# Запуск потоков и остановка текущего
# Вывод строки об окончании сражения


# Создайте класс , наследованный от Thread, объекты которого будут обладать следующими свойствами:
# Атрибут  - имя рыцаря. ()
# Атрибут power - сила рыцаря. ()
# А также метод run, в котором рыцарь будет сражаться с врагами:
# При запуске потока должна выводится надпись .
# Рыцарь сражается до тех пор, пока не повергнет всех врагов (у всех потоков их 100).
# В процессе сражения количество врагов уменьшается на power текущего рыцаря.
# По прошествию 1 дня сражения (1 секунды) выводится строка "<Имя рыцаря> сражается <кол-во дней>..., осталось <кол-во воинов> воинов."
# После победы над всеми врагами выводится надпись "<Имя рыцаря> одержал победу спустя <кол-во дней> дней(дня)!"